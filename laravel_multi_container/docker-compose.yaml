version: "3.8"

services:
  server:
    image: 'nginx:stable-alpine'
    ports:
      - '8000:80'
    volumes:
      # Nginx must access the app files (this path degined in the conf as root directory)
      - ./src:/var/www/html
      # Insertion of the conf file from the local machine
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro

  php:
    build:
      # context will define the location of the docker file and the the directory in which the docker-image would be build(if the build process needs directories - these should be accessible)
      context: .
      dockerfile: php.dockerfile
    volumes:
      # PHP must acceess the app source files, the "delegated" option will improve preformance since the data wont be instantly written to the host machinhe
      - ./src:/var/www/html:delegated
  mysql:
    image: mysql:5.7
    env_file:
      - ./env/mysql.env

  # Utility contianer for downloading the laravel app - it is not active after running once    
  composer:
    build:
      context: .
      dockerfile: composer.dockerfile
    volumes:
      - ./src:/var/www/html
  artisan:
    build:
      context: .
      dockerfile: php.dockerfile
    volumes:
      - ./src:/var/www/html
    # This entrypoint will override the ENTRYPOINT in the php.dockerfile
    entrypoint: ["php", "/var/www/html/artisan"]

  npm:
    image: node:14
    # Override WORKDIR in working directory
    working_dir: /var/www/html
    entrypoint: ["npm"]
    volumes:
      - ./src:/var/www/html